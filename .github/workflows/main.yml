# GitHub Action for generating a contribution graph with a snake eating your contributions.

name: Generate Snake

# Controls when the action will run. This action runs every 6 hours.
on:
  schedule:
    # every 6 hours
    - cron: "0 */6 * * *"
  workflow_dispatch:  # This allows us to run the Action manually from the Actions tab

# The sequence of runs in this workflow:
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # 1. Checks repo under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # 2. Generates the snake using Platane's snk action
      - uses: Platane/snk@master
        id: snake-gif
        with:
          github_user_name: umitsahin1  # Change this to your GitHub username
          gif_out_path: dist/github-contribution-grid-snake.gif  # Output GIF file path
          svg_out_path: dist/github-contribution-grid-snake.svg  # Output SVG file path

      # 3. Show the status of the build. Makes it easier for debugging (if there's any issues)
      - run: git status

      # 4. Push the changes to the repository
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}  # Automatically provided token for GitHub Actions
          branch: master  # Specify the branch you want to push to
          force: true  # Force push to the branch to avoid issues with history

      # 5. Deploy the files to GitHub Pages (optional step)
      - uses: crazy-max/ghaction-github-pages@v2.1.3
        with:
          target_branch: output  # Push the changes to a separate output branch
          build_dir: dist  # Directory where your output files are located (e.g., dist/)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Provide the GitHub token for pushing to the output branch


